import { buildSelector } from '@helpers/buildSelector'

// TODO: this should be refactored; we should have single file with selector IDs
const selectors = {
  // dashboard
  // TODO: remove this once we have unified token address on dashboard and swap and bridge pages
  walletBaseTokenBalance: 'token-balance-0x0BbbEad62f7647AE8323d2cb243A0DB74B7C2b80.8453',
  usdcBaseTokenBalance: 'token-balance-0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913.8453',
  usdcOPBaseTokenBalance: 'token-balance-0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85.10',
  usdcEOPBaseTokenBalance: 'token-balance-0x7F5c764cBc14f9669B88837ca1490cCa17c31607.10',
  daiOPBaseTokenBalance: 'token-balance-0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1.10',
  xWalletETHBaseTokenBalance: 'token-balance-0x47Cd7E91C3CBaAF266369fe8518345fc4FC12935.1',
  account: 'account',
  importBtn: 'import-button',
  importPrivateBtn: 'button-import-private-key',
  importExistingAccBtn: 'create-existing-account-btn',
  importMethodTrezor: 'import-method-trezor',
  trezorConnectConfirmTerms: '@analytics/continue-button',
  saveAndContinueBtn: 'button-save-and-continue',
  enterSeedPhraseField: 'enter-seed-phrase-field',
  buttonProceedSeedPhrase: 'button-proceed-seed-phrase',
  doNotSaveSeedBtn: 'do-not-save-seed-button',
  saveAsDefaultSeedBtn: 'save-seed-button',
  getStartedBtnImport: 'get-started-button-import',
  enterPassField: 'enter-pass-field',
  repeatPassField: 'repeat-pass-field',
  keystoreBtnCreate: 'keystore-button-create',
  keystoreBtnContinue: 'keystore-button-continue',
  editBtnForEditNameField: 'edit-btn-for-edit-name-field',
  editFieldNameField: 'edit-name-field',
  getStartedBtnAdd: 'get-started-button-add',
  addressEnsField: 'address-ens-field',
  addToAddressBookButton: 'add-to-address-book-button',
  viewOnlyAddressField: 'view-only-address-field',
  viewOnlyBtnImport: 'view-only-button-import',
  addOneMoreAddress: 'add-one-more-address',
  addContactFormButton: 'add-contact-form-modal',
  contactNameField: 'contact-name-field',
  contactNameText: 'contact-name-text', // TODO: selector could be more precise
  contactAddressText: 'address',
  sendFormAddToAddresBook: 'send-form-add-to-address-book-button',
  formAddContactNameField: 'form-contact-name-field',
  formAddToContactsButton: 'form-add-to-contacts-button',
  buttonAddAccount: 'button-add-account',
  watchAddress: 'watch-address',
  checkbox: 'checkbox',
  addAccount: 'add-account',
  buttonImportAccount: 'button-import-account',
  seedPhraseInputFieldDynamic: 'seed-phrase-field',
  getStartedCreateHotWallet: 'get-started-create-hot-wallet',
  setUpWithSeedPhraseBtn: 'set-up-with-seed-phrase-btn',
  createSeedPrepareCheckboxDyn: 'create-seed-prepare-checkbox',
  reviewSeedPhraseBtn: 'review-seed-phrase-btn',
  recoveryWithSeedWordDyn: 'recovery-with-seed-word',
  createSeedPhraseWriteContinueBtn: 'create-seed-phrase-write-continue-btn',
  seedWordNumberToBeEntered: 'seed-word-number-to-be-entered',
  seedWordPositionFieldDyn: 'seed-word-position-field',
  createSeedPhraseConfirmContinueBtn: 'create-seed-phrase-confirm-continue-btn',
  personalizeAccount: 'personalize-account',
  pinExtensionCloseBtn: 'pin-extension-close-btn',
  accountSelectBtn: 'account-select-btn',
  selectSeedPhraseLength: 'select-seed-phrase-length',
  option24WordsSeedPhrase: 'option-i-have-24-word-phrase',
  selectChangeHdPath: 'select-change-hd-path',
  optionBip44LedgerLive: 'option-bip44-ledger-live',
  importExistingWallet: 'import-existing-wallet',
  optionLegacyLedgerMyEtherWalletMyCrypto: 'option-legacy-ledger-myetherwallet-mycrypto',
  getStartedButtonConnectHwWallet: 'get-started-button-connect-hw-wallet',
  selectHwOptionTrezor: 'select-hw-option-trezor',
  trezorPermissionConfirmButton: '@permissions/confirm-button',
  trezorExportAddressConfirmButton: '@export-address/confirm-button',
  enterCurrentPassField: 'enter-current-pass-field',
  enterNewPassField: 'enter-new-pass-field',
  repeatNewPassField: 'repeat-new-pass-field',
  changeDevicePassButton: 'change-device-pass-button',
  bottomSheet: 'bottom-sheet',
  devicePassSuccessModal: 'device-pass-success-modal',
  lockExtensionButton: 'lock-extension-button',
  createKeystorePassBtn: 'create-keystore-pass-btn',
  passphraseField: 'passphrase-field',
  buttonUnlock: 'button-unlock',
  fullBalance: 'full-balance',
  tabNft: 'tab-nft',
  collectionItem: 'collection-item',
  collectiblePicture: 'collectible-picture',
  collectibleRow: 'collectible-row',
  addressBookMyWalletContactDyn: 'address-book-my-wallet-contact',
  dashboardButtonSend: 'dashboard-button-send',
  dashboardButtonSwapAndBridge: 'dashboard-button-swap-and-bridge',
  dashboardHumburgerBtn: 'dashboard-hamburger-btn',
  balanceErrorIcon: 'balance-affecting-error-icon',
  portfolioErrorAlert: 'portfolio-error-alert',
  continueAnywayCheckboxSaB: 'checkbox',
  continueAnywayButton: '//div[contains(text(),"Continue anyway")]',
  amountField: 'amount-field',
  recipientAddressUnknownCheckbox: 'recipient-address-unknown-checkbox',
  transferButtonConfirm: 'transfer-button-confirm',
  addAccountField: 'add-account-field',
  importExistingSeedBtn: 'import-existing-seed-btn',
  createSeedBtn: 'create-seed-btn',
  importFromSavedSeed: 'import-from-saved-seed',
  nativeTokenPolygonDyn: 'token-0x0000000000000000000000000000000000000000-polygon',
  tokenSend: 'token-send',
  tokensSelect: 'tokens-select',
  feeTokensSelect: 'fee-option-select',
  queueAndSignLaterButton: 'queue-and-sign-later-button',
  deleteTxnCallDyn: 'delete-txn-call',
  feeSlow: 'option-slow',
  feeMedium: 'option-medium',
  feeFast: 'option-fast',
  feeApe: 'option-ape',
  transactionButtonReject: 'transaction-button-reject',
  totalPortfolioAmountInteger: 'total-portfolio-amount-integer',
  proceedBtn: 'proceed-btn',
  batchBtn: 'batch-btn',
  privateKeyWarningCheckbox1: 'private-key-warning-checkbox-1',
  privateKeyWarningCheckbox2: 'private-key-warning-checkbox-2',
  nativeTokenBaseDashboard: 'token-0x0000000000000000000000000000000000000000-8453',
  bannerButtonOpen: 'banner-button-open',
  bannerButtonReject: 'banner-button-reject',
  confettiModalActionButton: 'confetti-modal-action-button',
  refreshButton: 'refresh-button',
  dashboardGasTankButton: 'dashboard-gas-tank-button',
  dashboardGasTankBalance: 'dashboard-gas-tank-balance',
  createSmartAccountGasTankModalButton: 'create-smart-account-gas-tank-modal-button',
  recieveNetworkBase: 'option-8453',
  recieveNetworkOptimism: 'option-10',
  confirmFollowUpTxn: 'confirm-follow-up-txns-checkbox',
  USDC: 'option-0x0b2c639c533813f4aa9d7837caf62653d097ff85.usdc',
  signTransactionButton: 'transaction-button-sign',
  maxAvailableAmount: 'max-available-amount',
  searchInput: 'search-input',
  // Swap & Bridge selectors
  sendTokenSab: 'from-token-select',
  receiveTokenSab: 'to-token-select',
  selectRouteButton: 'select-route',
  routeLoadingTextSab: 'route-loading-text-sab',
  fromAmountInputSab: 'from-amount-input-sab',
  switchTokensTooltipSab: 'switch-tokens-condition-tooltip-sab',
  switchCurrencySab: 'switch-currency-sab',
  routePrioritySab: 'route-priority-sab',
  highPriceImpactSab: '//div[contains(text(),"Ouch! Very high price impact")]', // TODO: change with ID when we add it
  settingsAddNetworkManually: 'add-network-manually',
  settingsAddNetworkFromChainlist: 'add-network-from-chainlist',
  removeNetworkButton: 'remove-network-btn',
  removeNetworkConfirmButton: 'remove-network-confirm-btn',
  signButton: 'sign-button',
  backButton: 'back-button',
  txnStatus: 'txn-status',
  batchModalGotIt: 'queue-modal-got-it-button',
  signButtonSwap: 'swap-button-sign',
  addMoreButton: 'add-more-button',
  flipIcon: 'flip-icon',
  swapSignButton: 'swap-button-sign',
  addToBatchButton: 'batch-btn',
  goDashboardButton: 'go-dashboard-button',
  txnConfirmed: 'txn-confirmed',
  maxAmountButton: 'max-amount-button',
  // Top up
  modalGasTankBalance: 'gas-tank-balance',
  topUpButton: 'top-up-gas-tank-modal-button',
  topUpProceedButton: 'proceed-btn',
  closeProgressModalButton: 'track-progress-primary-button',
  // Network Management
  // TODO: change once we have IDs on FE
  disableNetworkButton: 'disable-network-btn',
  disableNetworkConfirmButton: 'disable-network-confirm-btn',
  addRPCURLButton: '//div[.//div[text()="RPC URL"]]//div[text()="Add"]',
  addNetworkButton: '//div[.//div[text()="Network details"]]//div[text()="Add network"]',
  connectWalletButton:
    "//div[.//span[text()='Include Testnets']]//button[normalize-space()='Connect Wallet']",
  chainlistSearchPlaceholder: 'input[placeholder="ETH, Fantom, ..."]',
  addToMetamaskButton: '//button[contains(text(),"Add to Metamask")]',
  confirmaddNetworkOnChainlistButton: '//div[contains(text(),"Add network")]',
  blockExplorerURL: (url: string) => `//div[contains(text(),"${url}")]`,
  networkDetailEditButton: '//div[.//div[text()="Network details"]]//div[text()="Edit"]',
  // edit network modal
  editNetworkModalTitle: '//div[text()="Edit network"]',
  editNetworkCancelButton: '//div[contains(text(),"Cancel")]',
  editNetworkSaveButton: '//div[contains(text(),"Save")]',
  networkSettingsSavedSnackbar: (networkName: string) =>
    `((//div[contains(normalize-space(), "${networkName} settings saved!")]))[4]`, // TODO: snackbar selector finding 8 elements; change once we have ID on FE
  // Sign
  dappConnectButton: 'dapp-connect-button',
  signMessageButton: 'button-sign',
  // Notifications
  networkSuccessfullyAddedSnackbar:
    '(//div[contains(normalize-space(), "Network successfully added!")])[4]', // TODO: snackbar selector finding 8 elements; change once we have ID on FE
  contactSuccessfullyAddedSnackbar:
    '(//div[contains(normalize-space(), "Contact added to Address Book")])[4]' // TODO: snackbar selector finding 8 elements; change once we have ID on FE
}

type SelectorKey = keyof typeof selectors
type Selectors = { [K in SelectorKey]?: string }

export const SELECTORS: Selectors = Object.fromEntries(
  Object.entries(selectors).map(([key, value]) => [key, buildSelector(value)])
)

export default selectors
