require_relative '../node_modules/expo/scripts/autolinking'
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

def min_ios_version_supported
  return '12.4'
end

platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false

require 'json'
podfile_properties = JSON.parse(File.read('./Podfile.properties.json')) rescue {}
inhibit_all_warnings!

# Force pods to match minimum iOS version for React Native
# Fixes build issue on Xcode Cloud where some pods
# Use iOS > 12 calls despite being set as iOS 11
def __apply_Xcode_14_3_RC_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
      minimum_target = min_ios_version_supported
      if current_target.to_f < minimum_target.to_f
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = minimum_target
      end
    end
  end
end

target 'ambire' do
  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    # Use Flipper only for debug builds. Otherwise, it conflicts with the
    # OpenSSL framework dep of the react-native-quick-crypto package.
    # The debug builds run fine, but the release ones fail with:
    # {@link https://github.com/margelo/react-native-quick-crypto/issues/121}
    # Another solution is to manually add the "OpenSSL.framework" pod in xCode ->
    # General -> "Frameworks, Libraries and Embedded Content". But it works
    # only for the release builds, not for the debug ones (which fail).
    :flipper_configuration => ENV['CI'] ?
    FlipperConfiguration.disabled :
    FlipperConfiguration.enabled,
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    __apply_Xcode_14_3_RC_post_install_workaround(installer)

    # This is necessary for Xcode 14, because it signs resource bundles by
    # default when building for devices.
    # {@link https://expo.fyi/r/disable-bundle-resource-signing}
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end

end
