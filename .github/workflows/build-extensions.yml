name: Build production browser extensions ⚡

on:
  workflow_dispatch: # Manual trigger only
  push: # TODO: Temporarily, to trigger the workflow manually while not in v2

jobs:
  build:
    name: Build browser extension webkit and gecko .zips, ready for review submission
    runs-on: ubuntu-24.04
    environment: extension-production
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout code 🛎️
        uses: actions/checkout@v4

      - name: Add SSH key to checkout a private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Git submodules init
        run: git submodule init
        shell: bash

      - name: Git submodules update
        run: git submodule update
        shell: bash

      - name: Install Node.js ⚙️
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install Dependencies
        run: PUPPETEER_SKIP_DOWNLOAD='true' yarn install --frozen-lockfile
        shell: bash

      - name: Generate .env file for review
        run: |
          echo "RELAYER_URL=\"${{ vars.RELAYER_URL }}\"" >> .env
          echo "VELCRO_URL=\"${{ vars.VELCRO_URL }}\"" >> .env
          echo "BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD=\"${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD }}\"" >> .env
          echo "BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV=\"${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV }}\"" >> .env
          echo "BROWSER_EXTENSION_PUBLIC_KEY=\"${{ vars.BROWSER_EXTENSION_PUBLIC_KEY }}\"" >> .env
          echo "REACT_APP_PIMLICO_API_KEY=\"${{ vars.REACT_APP_PIMLICO_API_KEY }}\"" >> .env
          echo "REACT_APP_JIFFYSCAN_API_KEY=\"${{ vars.REACT_APP_JIFFYSCAN_API_KEY }}\"" >> .env
          echo "NFT_CDN_URL=\"${{ vars.NFT_CDN_URL }}\"" >> .env
          echo "LEGENDS_NFT_ADDRESS=\"${{ vars.LEGENDS_NFT_ADDRESS }}\"" >> .env
          echo "LI_FI_API_KEY=\"${{ vars.LI_FI_API_KEY }}\"" >> .env
        shell: bash

      - name: Build extensions
        env:
          RELAYER_URL: ${{ vars.RELAYER_URL }}
          VELCRO_URL: ${{ vars.VELCRO_URL }}
          BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD: ${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD }}
          BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV: ${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV }}
          BROWSER_EXTENSION_PUBLIC_KEY: ${{ vars.BROWSER_EXTENSION_PUBLIC_KEY }}
          REACT_APP_PIMLICO_API_KEY: ${{ vars.REACT_APP_PIMLICO_API_KEY }}
          REACT_APP_JIFFYSCAN_API_KEY: ${{ vars.REACT_APP_JIFFYSCAN_API_KEY }}
          NFT_CDN_URL: ${{ vars.NFT_CDN_URL }}
          LEGENDS_NFT_ADDRESS: ${{ vars.LEGENDS_NFT_ADDRESS }}
          LI_FI_API_KEY: ${{ vars.LI_FI_API_KEY }}
        run: yarn build:extensions

      - name: Generate .zip with the full source code (including .env)
        run: |
          zip -r source-code.zip . -x "node_modules/*" -x ".git/*" -x "build/*" -x "*.zip"
        shell: bash

      - name: Upload source code 📦
        uses: actions/upload-artifact@v4
        with:
          name: extension-source
          path: ./source-code.zip

      - name: Upload extension builds 📦
        uses: actions/upload-artifact@v4
        with:
          name: extension-zips
          path: ./build/*.zip
