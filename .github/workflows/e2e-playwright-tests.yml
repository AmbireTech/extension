name: E2E Playwright Tests

on:
  push:
    branches: v2
  pull_request:
    branches: v2

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    environment: testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH key to checkout a private repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Setup Environment
        uses: ./.github/composite-actions/setup

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: ./e2e-playwright-tests
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./e2e-playwright-tests
        run: npx playwright install --with-deps

      - name: Configure the display server
        run: Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &

      - name: Run Playwright tests
        env:
          IS_TESTING: 'true'
          E2E_DEBUG: ${{ vars.E2E_DEBUG }}
          # Its value is based on the above Display server configuration
          DISPLAY: ':99.0'
          RELAYER_URL: ${{ vars.RELAYER_URL }}
          VELCRO_URL: ${{ vars.VELCRO_URL }}
          SOCKET_API_KEY: ${{ vars.SOCKET_API_KEY }}
          LI_FI_API_KEY: ${{ vars.LI_FI_API_KEY }}
          BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD: ${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_PROD }}
          BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV: ${{ vars.BROWSER_EXTENSION_DEFAULT_LOG_LEVEL_DEV }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          SEED: ${{ secrets.SEED }}
          BA_PRIVATE_KEY: ${{ secrets.BA_PRIVATE_KEY }}
          BA_PASSPHRASE: ${{ secrets.BA_PASSPHRASE }}
          BA_ACCOUNTS: ${{ vars.BA_ACCOUNTS }}
          BA_KEYSTORE_UID: ${{ vars.BA_KEYSTORE_UID }}
          BA_KEYS: ${{ vars.BA_KEYS }}
          BA_SECRETS: ${{ secrets.BA_SECRETS }}
          BA_SEEDS: ${{ vars.BA_SEEDS }}
          BA_NETWORK_WITH_ASSETS: ${{ vars.BA_NETWORK_WITH_ASSETS }}
          BA_NETWORK_WITH_POSITIONS: ${{ vars.BA_NETWORK_WITH_POSITIONS }}
          BA_ONBOARDING_STATE: ${{ vars.BA_ONBOARDING_STATE }}
          BA_PREVIOUSHINTS: ${{ vars.BA_PREVIOUSHINTS }}
          BA_SELECTED_ACCOUNT: ${{ vars.BA_SELECTED_ACCOUNT }}
          BA_TERMSTATE: ${{ vars.BA_TERMSTATE }}
          SA_ACCOUNTS: ${{ vars.SA_ACCOUNTS }}
          SA_IS_ONBOARDED: ${{ vars.SA_IS_ONBOARDED }}
          SA_KEYSTORE_UID: ${{ vars.SA_KEYSTORE_UID }}
          SA_KEYS: ${{ vars.SA_KEYS }}
          SA_SECRETS: ${{ secrets.SA_SECRETS }}
          SA_SEEDS: ${{ vars.SA_SEEDS }}
          SA_ONBOARDING_STATE: ${{ vars.SA_ONBOARDING_STATE }}
          SA_PREVIOUSHINTS: ${{ vars.SA_PREVIOUSHINTS }}
          SA_SELECTED_ACCOUNT: ${{ vars.SA_SELECTED_ACCOUNT }}
          SA_TERMSTATE: ${{ vars.SA_TERMSTATE }}
          SA_NETWORK_WITH_ASSETS: ${{ vars.SA_NETWORK_WITH_ASSETS }}
          SA_NETWORK_WITH_POSITIONS: ${{ vars.SA_NETWORK_WITH_POSITIONS }}
          SA_PASSPHRASE: ${{ secrets.SA_PASSPHRASE }}
          DEFAULT_INVITATION_CODE_DEV: ${{ vars.DEFAULT_INVITATION_CODE_DEV }}
          SEED_24_WORDS: ${{ secrets.SEED_24_WORDS }}
          SHOULD_RUN_TREZOR_TESTS: 'true'

        working-directory: ./e2e-playwright-tests
        run: npm run test

      - name: Upload HTML report
        if: always()  # Ensure this runs even if tests fail
        working-directory: ./e2e-playwright-tests
        run: |
          mkdir -p playwright-report
          zip -r playwright-report.zip playwright-report
        continue-on-error: true

      - name: Save test report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./e2e-playwright-tests/playwright-report.zip
