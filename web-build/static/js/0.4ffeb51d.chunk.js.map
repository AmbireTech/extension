{"version":3,"sources":["node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","node_modules/@formatjs/ecma402-abstract/lib/262.js","node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","node_modules/@formatjs/ecma402-abstract/lib/utils.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js","node_modules/@formatjs/ecma402-abstract/lib/regex.generated.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","node_modules/@formatjs/ecma402-abstract/lib/data.js","node_modules/@formatjs/intl-localematcher/lib/abstract/utils.js","node_modules/@formatjs/intl-localematcher/lib/abstract/BestAvailableLocale.js","node_modules/@formatjs/intl-localematcher/lib/abstract/UnicodeExtensionValue.js","node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js","node_modules/@formatjs/intl-localematcher/lib/abstract/LookupMatcher.js","node_modules/@formatjs/intl-localematcher/lib/abstract/BestFitMatcher.js","node_modules/@formatjs/intl-localematcher/lib/abstract/LookupSupportedLocales.js","node_modules/@formatjs/intl-localematcher/lib/index.js","node_modules/@formatjs/intl-localematcher/lib/abstract/CanonicalizeLocaleList.js"],"names":["CanonicalizeLocaleList","locales","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","_a","tzData","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","Object","keys","reduce","all","z","ianaTimeZone","ToString","o","TypeError","String","ToNumber","val","undefined","NaN","Number","TimeClip","time","isFinite","Math","abs","n","number","isNaN","SameValue","integer","floor","ToInteger","ToObject","arg","x","y","is","ArrayCreate","len","Array","HasOwnProperty","prop","prototype","hasOwnProperty","call","Type","mod","Day","t","WeekDay","DayFromYear","Date","UTC","TimeFromYear","YearFromTime","getUTCFullYear","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","Error","DateFromTime","mft","HourFromTime","MS_PER_MINUTE","MinFromTime","MS_PER_SECOND","SecFromTime","OrdinaryHasInstance","C","O","internalSlots","boundTargetFunction","P","isPrototypeOf","msFromTime","CoerceOptionsToObject","options","create","DefaultNumberOption","min","max","fallback","RangeError","concat","GetNumberOption","property","minimum","maximum","GetOption","opts","type","values","value","Boolean","filter","length","join","GetOptionsObject","SANCTIONED_UNITS","removeUnitNamespace","unit","slice","indexOf","SIMPLE_UNITS","map","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsValidTimeZoneName","zoneNames","Set","linkNames","forEach","add","linkName","has","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","replace","_","c","test","IsWellFormedUnitIdentifier","toLowerCase","units","split","numerator","denominator","getMagnitude","log","LOG10E","repeat","s","times","arr","i","setInternalSlot","pl","field","get","set","setMultiInternalSlots","props","_i","k","getInternalSlot","getMultiInternalSlots","fields","arguments","slots","f","isLiteralPart","patternPart","defineProperty","target","name","configurable","enumerable","writable","invariant","condition","message","Err","ComputeExponentForMagnitude","numberFormat","magnitude","getInternalSlots","notation","dataLocaleData","numberingSystem","compactDisplay","style","currencyDisplay","thresholdMap","numbers","nu","short","decimal","long","num","pow","thresholds","magnitudeKey","other","match","ToRawPrecision","minPrecision","maxPrecision","m","e","xFinal","int","p","xToString","toString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","round","adjustDecimalPlace","cut","formattedString","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","mantissa","exponent","a","b","FormatNumericToString","intlObject","result","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","minimumIntegerDigits","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","digitMapping","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","source","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","data","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","pattern","currencyData","byNumberingSystem","compactPluralRules","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencySign","percent","decimalNumberPattern","exec","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","symbols","numberPatternParts_1","part","push","apply","paritionNumberIntoParts","useGrouping","minusSign","plusSign","percentSign","substring","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","_b","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","_c","_d","interpolateMatch","digitReplacementTable","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","negativePattern","rules","select","PartitionNumberPattern","nan","infinity","signDisplay","FormatNumericToParts","nf","implDetails","parts","parts_1","SetNumberFormatUnitOptions","SetNumberFormatDigitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","InitializeNumberFormat","localeData","availableLocales","numberingSystemNames","getDefaultLocale","requestedLocales","opt","matcher","localeMatcher","r","dataLocale","locale","cDigits","PartitionPattern","beginIndex","endIndex","nextIndex","SupportedLocales","RangePatternType","_super","MissingLocaleDataError","_this","this","isMissingLocaleDataError","UNICODE_EXTENSION_SEQUENCE_REGEX","BestAvailableLocale","candidate","pos","lastIndexOf","UnicodeExtensionValue","extension","key","size","searchValue","start","end","done","ResolveLocale","relevantExtensionKeys","foundLocale","requestedLocales_1","noExtensionLocale","availableLocale","LookupMatcher","minimizedAvailableLocaleMap","availableLocaleMap","canonicalizedLocaleMap","minimizedAvailableLocales","minimizedLocale","Locale","minimize","canonicalizedLocale","l","maximizedRequestedLocale","maximize","minimizedRequestedLocale","BestFitMatcher","supportedExtension","relevantExtensionKeys_1","foundLocaleData","keyLocaleData","isArray","supportedExtensionAddition","requestedValue","optionsValue","privateIndex","preExtension","postExtension","LookupSupportedLocales","subset","defaultLocale","algorithm"],"mappings":"uFAIO,SAASA,EAAuBC,GAEnC,OAAOC,KAAKC,oBAAoBF,GCF7B,SAASG,EAAyBC,EAAIC,GACzC,IAAIC,EAASD,EAAGC,OAAQC,EAAiBF,EAAGE,eACxCC,EAAeJ,EAAGK,cAClBC,EAAkBC,OAAOC,KAAKN,GAAQO,QAAO,SAAUC,EAAKC,GAE5D,OADAD,EAAIC,EAAEN,eAAiBM,EAChBD,IACR,IACCE,EAAeT,EAAeC,IAAiBE,EAAgBF,GACnE,MAAqB,YAAjBQ,GAA+C,YAAjBA,EACvB,MAEJA,ECZJ,SAASC,EAASC,GAErB,GAAiB,kBAANA,EACP,MAAMC,UAAU,6CAEpB,OAAOC,OAAOF,GAMX,SAASG,EAASC,GACrB,QAAYC,IAARD,EACA,OAAOE,IAEX,GAAY,OAARF,EACA,OAAO,EAEX,GAAmB,mBAARA,EACP,OAAOA,EAAM,EAAI,EAErB,GAAmB,kBAARA,EACP,OAAOA,EAEX,GAAmB,kBAARA,GAAmC,kBAARA,EAClC,MAAM,IAAIH,UAAU,0CAExB,OAAOM,OAAOH,GA2BX,SAASI,EAASC,GACrB,OAAKC,SAASD,GAGVE,KAAKC,IAAIH,GAAQ,iBACVH,IA1Bf,SAAmBO,GACf,IAAIC,EAASX,EAASU,GACtB,GAAIE,MAAMD,IAAWE,EAAUF,GAAS,GACpC,OAAO,EAEX,GAAIJ,SAASI,GACT,OAAOA,EAEX,IAAIG,EAAUN,KAAKO,MAAMP,KAAKC,IAAIE,IAIlC,OAHIA,EAAS,IACTG,GAAWA,GAEXD,EAAUC,GAAU,GACb,EAEJA,EAaAE,CAAUV,GALNH,IAWR,SAASc,EAASC,GACrB,GAAW,MAAPA,EACA,MAAM,IAAIpB,UAAU,gDAExB,OAAOR,OAAO4B,GAOX,SAASL,EAAUM,EAAGC,GACzB,OAAI9B,OAAO+B,GACA/B,OAAO+B,GAAGF,EAAGC,GAGpBD,IAAMC,EAGO,IAAND,GAAW,EAAIA,IAAM,EAAIC,EAG7BD,IAAMA,GAAKC,IAAMA,EAMrB,SAASE,EAAYC,GACxB,OAAO,IAAIC,MAAMD,GAOd,SAASE,EAAe5B,EAAG6B,GAC9B,OAAOpC,OAAOqC,UAAUC,eAAeC,KAAKhC,EAAG6B,GAM5C,SAASI,EAAKX,GACjB,OAAU,OAANA,EACO,OAEM,qBAANA,EACA,YAEM,oBAANA,GAAiC,kBAANA,EAC3B,SAEM,kBAANA,EACA,SAEM,mBAANA,EACA,UAEM,kBAANA,EACA,SAEM,kBAANA,EACA,SAEM,kBAANA,EACA,cADX,E,m2FAWJ,SAASY,EAAIZ,EAAGC,GACZ,OAAOD,EAAIX,KAAKO,MAAMI,EAAIC,GAAKA,EAM5B,SAASY,EAAIC,GAChB,OAAOzB,KAAKO,MAAMkB,EAfL,OAqBV,SAASC,EAAQD,GACpB,OAAOF,EAAIC,EAAIC,GAAK,EAAG,GAMpB,SAASE,EAAYf,GACxB,OAAOgB,KAAKC,IAAIjB,EAAG,GA7BN,MAmCV,SAASkB,EAAalB,GACzB,OAAOgB,KAAKC,IAAIjB,EAAG,GAMhB,SAASmB,EAAaN,GACzB,OAAO,IAAIG,KAAKH,GAAGO,iBAEhB,SAASC,EAAWrB,GACvB,OAAIA,EAAI,IAAM,EACH,IAEPA,EAAI,MAAQ,EACL,IAEPA,EAAI,MAAQ,EACL,IAEJ,IAEJ,SAASsB,EAAcT,GAC1B,OAAOD,EAAIC,GAAKE,EAAYI,EAAaN,IAEtC,SAASU,EAAWV,GACvB,OAAuC,MAAhCQ,EAAWF,EAAaN,IAAc,EAAI,EAM9C,SAASW,EAAcX,GAC1B,IAAIY,EAAMH,EAAcT,GACpBa,EAAOH,EAAWV,GACtB,GAAIY,GAAO,GAAKA,EAAM,GAClB,OAAO,EAEX,GAAIA,EAAM,GAAKC,EACX,OAAO,EAEX,GAAID,EAAM,GAAKC,EACX,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,EAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,GAEX,GAAID,EAAM,IAAMC,EACZ,OAAO,GAEX,MAAM,IAAIC,MAAM,gBAEb,SAASC,EAAaf,GACzB,IAAIY,EAAMH,EAAcT,GACpBgB,EAAML,EAAcX,GACpBa,EAAOH,EAAWV,GACtB,GAAY,IAARgB,EACA,OAAOJ,EAAM,EAEjB,GAAY,IAARI,EACA,OAAOJ,EAAM,GAEjB,GAAY,IAARI,EACA,OAAOJ,EAAM,GAAKC,EAEtB,GAAY,IAARG,EACA,OAAOJ,EAAM,GAAKC,EAEtB,GAAY,IAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,IAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,IAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,IAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,IAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,IAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,KAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,GAAY,KAARG,EACA,OAAOJ,EAAM,IAAMC,EAEvB,MAAM,IAAIC,MAAM,gBAQb,SAASG,EAAajB,GACzB,OAAOF,EAAIvB,KAAKO,MAAMkB,EAFRkB,MALE,IASb,SAASC,EAAYnB,GACxB,OAAOF,EAAIvB,KAAKO,MAAMkB,EANNoB,KAHG,IAWhB,SAASC,EAAYrB,GACxB,OAAOF,EAAIvB,KAAKO,MAAMkB,EAVN,KADK,IAyBlB,SAASsB,EAAoBC,EAAGC,EAAGC,GACtC,GAZqB,oBAYLF,EACZ,OAAO,EAEX,GAAsB,OAAlBE,QAA4C,IAAlBA,OAA2B,EAASA,EAAcC,oBAE5E,OAAOF,aADoB,OAAlBC,QAA4C,IAAlBA,OAA2B,EAASA,EAAcC,qBAGzF,GAAiB,kBAANF,EACP,OAAO,EAEX,IAAIG,EAAIJ,EAAE7B,UACV,GAAiB,kBAANiC,EACP,MAAM,IAAI9D,UAAU,+EAExB,OAAOR,OAAOqC,UAAUkC,cAAchC,KAAK+B,EAAGH,GAE3C,SAASK,EAAW7B,GACvB,OAAOF,EAAIE,EA1CK,KC9Rb,SAAS8B,EAAsBC,GAClC,MAAuB,qBAAZA,EACA1E,OAAO2E,OAAO,MAElBhD,EAAS+C,GCVb,SAASE,EAAoBjE,EAAKkE,EAAKC,EAAKC,GAC/C,QAAYnE,IAARD,EAAmB,CAEnB,GADAA,EAAMG,OAAOH,GACTW,MAAMX,IAAQA,EAAMkE,GAAOlE,EAAMmE,EACjC,MAAM,IAAIE,WAAW,GAAGC,OAAOtE,EAAK,0BAA0BsE,OAAOJ,EAAK,MAAMI,OAAOH,EAAK,MAEhG,OAAO5D,KAAKO,MAAMd,GAEtB,OAAOoE,ECCJ,SAASG,EAAgBR,EAASS,EAAUC,EAASC,EAASN,GAGjE,OAAOH,EAFGF,EAAQS,GAEcC,EAASC,EAASN,GCH/C,SAASO,EAAUC,EAAMnD,EAAMoD,EAAMC,EAAQV,GAChD,GAAoB,kBAATQ,EACP,MAAM,IAAI/E,UAAU,6BAExB,IAAIkF,EAAQH,EAAKnD,GACjB,QAAcxB,IAAV8E,EAAqB,CACrB,GAAa,YAATF,GAA+B,WAATA,EACtB,MAAM,IAAIhF,UAAU,gBAQxB,GANa,YAATgF,IACAE,EAAQC,QAAQD,IAEP,WAATF,IACAE,EAAQpF,EAASoF,SAEN9E,IAAX6E,IAAyBA,EAAOG,QAAO,SAAUjF,GAAO,OAAOA,GAAO+E,KAAUG,OAChF,MAAM,IAAIb,WAAW,GAAGC,OAAOS,EAAO,mBAAmBT,OAAOQ,EAAOK,KAAK,QAEhF,OAAOJ,EAEX,OAAOX,ECxBJ,SAASgB,EAAiBrB,GAC7B,GAAuB,qBAAZA,EACP,OAAO1E,OAAO2E,OAAO,MAEzB,GAAuB,kBAAZD,EACP,OAAOA,EAEX,MAAM,IAAIlE,UAAU,6BCTjB,IAAIwF,EAAmB,CAC1B,eACA,YACA,eACA,mBACA,cACA,eACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,eACA,gBACA,uBACA,kBACA,iBACA,kBACA,gBACA,gBACA,oBACA,cACA,cACA,mBACA,eACA,2BACA,cACA,oBACA,cACA,YACA,gBACA,aACA,aACA,aACA,sBACA,yBACA,qBACA,gBACA,eACA,qBAIG,SAASC,EAAoBC,GAChC,OAAOA,EAAKC,MAAMD,EAAKE,QAAQ,KAAO,GAKnC,IAAIC,EAAeL,EAAiBM,IAAIL,GAIxC,SAASM,EAAiCC,GAC7C,OAAOH,EAAaD,QAAQI,IAAmB,ECxD5C,SAASC,EAAoBhH,EAAIC,GACpC,IAAIC,EAASD,EAAGC,OAAQC,EAAiBF,EAAGE,eACxCC,EAAeJ,EAAGK,cAClB4G,EAAY,IAAIC,IAChBC,EAAY,IAAID,IAQpB,OAPA3G,OAAOC,KAAKN,GACP2G,KAAI,SAAUlG,GAAK,OAAOA,EAAEN,iBAC5B+G,SAAQ,SAAUzG,GAAK,OAAOsG,EAAUI,IAAI1G,MACjDJ,OAAOC,KAAKL,GAAgBiH,SAAQ,SAAUE,GAC1CH,EAAUE,IAAIC,EAASjH,eACvB4G,EAAUI,IAAIlH,EAAemH,GAAUjH,kBAEpC4G,EAAUM,IAAInH,IAAiB+G,EAAUI,IAAInH,GCVxD,IAAIoH,EAAgB,SAIb,SAASC,EAAyBC,GAErC,OAAwB,KADxBA,EAAuBA,EAPZC,QAAQ,YAAY,SAAUC,EAAGC,GAAK,OAAOA,EAAExH,kBAQ7C+F,SAGToB,EAAcM,KAAKJ,GCJpB,SAASK,EAA2BtB,GAEvC,GAAIK,EADJL,EAAmBA,EAPRkB,QAAQ,YAAY,SAAUC,EAAGC,GAAK,OAAOA,EAAEG,kBAStD,OAAO,EAEX,IAAIC,EAAQxB,EAAKyB,MAAM,SACvB,GAAqB,IAAjBD,EAAM7B,OACN,OAAO,EAEX,IAAI+B,EAAYF,EAAM,GAAIG,EAAcH,EAAM,GAC9C,SAAKnB,EAAiCqB,KACjCrB,EAAiCsB,ICnBnC,SAASC,EAAajG,GAGzB,OAAOX,KAAKO,MAAMP,KAAK6G,IAAIlG,GAAKX,KAAK8G,QAElC,SAASC,EAAOC,EAAGC,GACtB,GAAwB,oBAAbD,EAAED,OACT,OAAOC,EAAED,OAAOE,GAGpB,IADA,IAAIC,EAAM,IAAIlG,MAAMiG,GACXE,EAAI,EAAGA,EAAID,EAAIvC,OAAQwC,IAC5BD,EAAIC,GAAKH,EAEb,OAAOE,EAAItC,KAAK,IAEb,SAASwC,EAAgBhC,EAAKiC,EAAIC,EAAO9C,GACvCY,EAAImC,IAAIF,IACTjC,EAAIoC,IAAIH,EAAIvI,OAAO2E,OAAO,OAElB2B,EAAImC,IAAIF,GACdC,GAAS9C,EAEZ,SAASiD,EAAsBrC,EAAKiC,EAAIK,GAC3C,IAAK,IAAIC,EAAK,EAAGnJ,EAAKM,OAAOC,KAAK2I,GAAQC,EAAKnJ,EAAGmG,OAAQgD,IAAM,CAC5D,IAAIC,EAAIpJ,EAAGmJ,GACXP,EAAgBhC,EAAKiC,EAAIO,EAAGF,EAAME,KAGnC,SAASC,EAAgBzC,EAAKiC,EAAIC,GACrC,OAAOQ,EAAsB1C,EAAKiC,EAAIC,GAAOA,GAE1C,SAASQ,EAAsB1C,EAAKiC,GAEvC,IADA,IAAIU,EAAS,GACJJ,EAAK,EAAGA,EAAKK,UAAUrD,OAAQgD,IACpCI,EAAOJ,EAAK,GAAKK,UAAUL,GAE/B,IAAIM,EAAQ7C,EAAImC,IAAIF,GACpB,IAAKY,EACD,MAAM,IAAI3I,UAAU,GAAGyE,OAAOsD,EAAI,2CAEtC,OAAOU,EAAO/I,QAAO,SAAUC,EAAKiJ,GAEhC,OADAjJ,EAAIiJ,GAAKD,EAAMC,GACRjJ,IACRH,OAAO2E,OAAO,OAEd,SAAS0E,EAAcC,GAC1B,MAA4B,YAArBA,EAAY9D,KAYhB,SAAS+D,EAAeC,EAAQC,EAAM/J,GACzC,IAAIgG,EAAQhG,EAAGgG,MACf1F,OAAOuJ,eAAeC,EAAQC,EAAM,CAChCC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVlE,MAAOA,IAIR,SAASmE,EAAUC,EAAWC,EAASC,GAE1C,QADY,IAARA,IAAkBA,EAAMvG,QACvBqG,EACD,MAAM,IAAIE,EAAID,GCtEf,SAASE,EAA4BC,EAAcC,EAAWzK,GACjE,IACI0E,GAAgBgG,EADG1K,EAAG0K,kBACWF,GACjCG,EAAWjG,EAAciG,SAAUC,EAAiBlG,EAAckG,eAAgBC,EAAkBnG,EAAcmG,gBACtH,OAAQF,GACJ,IAAK,WACD,OAAO,EACX,IAAK,aACD,OAAOF,EACX,IAAK,cACD,OAAmC,EAA5BjJ,KAAKO,MAAM0I,EAAY,GAClC,QAGI,IAAIK,EAAiBpG,EAAcoG,eAAgBC,EAAQrG,EAAcqG,MAAOC,EAAkBtG,EAAcsG,gBAC5GC,OAAe,EACnB,GAAc,aAAVF,GAA4C,SAApBC,EAA4B,CAGpDC,GAFeL,EAAeM,QAAQzD,SAASoD,IAC3CD,EAAeM,QAAQzD,SAASmD,EAAeM,QAAQC,GAAG,KACtCC,UAEvB,CACD,IAAIC,EAAUT,EAAeM,QAAQG,QAAQR,IACzCD,EAAeM,QAAQG,QAAQT,EAAeM,QAAQC,GAAG,IAC7DF,EAAkC,SAAnBH,EAA4BO,EAAQC,KAAOD,EAAQD,MAEtE,IAAKH,EACD,OAAO,EAEX,IAAIM,EAAMxK,OAAOS,KAAKgK,IAAI,GAAIf,IAC1BgB,EAAanL,OAAOC,KAAK0K,GAC7B,GAAIM,EAAME,EAAW,GACjB,OAAO,EAEX,GAAIF,EAAME,EAAWA,EAAWtF,OAAS,GACrC,OAAOsF,EAAWA,EAAWtF,OAAS,GAAGA,OAAS,EAEtD,IAAIwC,EAAI8C,EAAW/E,QAAQ6E,GAC3B,IAAW,IAAP5C,EACA,OAAO,EAIX,IAAI+C,EAAeD,EAAW9C,GAG9B,MAAuB,MADFsC,EAAaS,GAAcC,MAErC,EAGHD,EAAavF,OACjB8E,EAAaS,GAAcC,MAAMC,MAAM,MAAM,GAAGzF,QCvDzD,SAAS0F,EAAe1J,EAAG2J,EAAcC,GAC5C,IACIC,EACAC,EACAC,EAwCAC,EA3CAC,EAAIL,EAIR,GAAU,IAAN5J,EACA6J,EAAIzD,EAAO,IAAK6D,GAChBH,EAAI,EACJC,EAAS,MAER,CACD,IAAIG,EAAYlK,EAAEmK,WAKdC,EAAyBF,EAAU3F,QAAQ,KAC3C1G,EAAKqM,EAAUpE,MAAM,KAAMuE,EAAoBxM,EAAG,GAAIyM,EAAoBzM,EAAG,GAC7E0M,EAAuCF,EAAkB9E,QAAQ,IAAK,IAC1E,GAAI6E,GAA0B,GAC1BG,EAAqCvG,QAAUiG,EAC/CH,GAAKQ,EACLT,EACIU,EACInE,EAAO,IAAK6D,EAAIM,EAAqCvG,QAC7D+F,EAAS/J,MAER,CAED,IAAIwK,GADJV,EAAI7D,EAAajG,IACYiK,EAAI,EAG7B1K,EAAIF,KAAKoL,MAAMC,EAAmB1K,EAAGwK,IAErCE,EAAmBnL,EAAG0K,EAAI,IAAM,KAChCH,GAAQ,EAERvK,EAAIF,KAAKO,MAAML,EAAI,KAEvBsK,EAAItK,EAAE4K,WAENJ,EAASW,EAAmBnL,EAAG0K,EAAI,EAAIH,IAgB/C,GAZIA,GAAKG,EAAI,GACTJ,GAAQzD,EAAO,IAAK0D,EAAIG,EAAI,GAC5BD,EAAMF,EAAI,GAELA,GAAK,GACVD,EAAI,GAAGzG,OAAOyG,EAAEvF,MAAM,EAAGwF,EAAI,GAAI,KAAK1G,OAAOyG,EAAEvF,MAAMwF,EAAI,IACzDE,EAAMF,EAAI,IAGVD,EAAI,KAAKzG,OAAOgD,EAAO,KAAM0D,EAAI,IAAI1G,OAAOyG,GAC5CG,EAAM,GAENH,EAAEtF,QAAQ,MAAQ,GAAKqF,EAAeD,EAAc,CAEpD,IADA,IAAIgB,EAAMf,EAAeD,EAClBgB,EAAM,GAAyB,MAApBd,EAAEA,EAAE7F,OAAS,IAC3B6F,EAAIA,EAAEvF,MAAM,GAAI,GAChBqG,IAEoB,MAApBd,EAAEA,EAAE7F,OAAS,KACb6F,EAAIA,EAAEvF,MAAM,GAAI,IAGxB,MAAO,CAAEsG,gBAAiBf,EAAGgB,cAAed,EAAQe,mBAAoBd,GAExE,SAASU,EAAmB1K,EAAGsI,GAC3B,OAAOA,EAAY,EAAItI,EAAIX,KAAKgK,IAAI,IAAKf,GAAatI,EAAIX,KAAKgK,IAAI,GAAIf,IC/DxE,SAASyC,EAAW/K,EAAGgL,EAAaC,GACvC,IAMIpB,EAUAG,EAhBAzC,EAAI0D,EACJ1L,EAAIF,KAAKoL,MAAMzK,EAAIX,KAAKgK,IAAI,GAAI9B,IAChCwC,EAASxK,EAAIF,KAAKgK,IAAI,GAAI9B,GAK9B,GAAIhI,EAAI,KACJsK,EAAItK,EAAE4K,eAEL,CAED,IAAItM,GADJgM,EAAItK,EAAE4K,YACKrE,MAAM,KAAMoF,EAAWrN,EAAG,GAAIsN,EAAWtN,EAAG,GACvDgM,EAAIqB,EAAS3F,QAAQ,IAAK,IAC1BsE,GAAQzD,EAAO,IAAK/G,KAAK4D,KAAKkI,EAAWtB,EAAE7F,OAAS,EAAG,IAG3D,GAAU,IAANuD,EAAS,CACT,IAAIN,EAAI4C,EAAE7F,OACV,GAAIiD,GAAKM,EAELsC,EADQzD,EAAO,IAAKmB,EAAI,EAAIN,GACpB4C,EACR5C,EAAIM,EAAI,EAEZ,IAAI6D,EAAIvB,EAAEvF,MAAM,EAAG2C,EAAIM,GACnB8D,EAAIxB,EAAEvF,MAAM2C,EAAIM,GACpBsC,EAAI,GAAGzG,OAAOgI,EAAG,KAAKhI,OAAOiI,GAC7BrB,EAAMoB,EAAEpH,YAGRgG,EAAMH,EAAE7F,OAGZ,IADA,IAAI2G,EAAMM,EAAcD,EACjBL,EAAM,GAAyB,MAApBd,EAAEA,EAAE7F,OAAS,IAC3B6F,EAAIA,EAAEvF,MAAM,GAAI,GAChBqG,IAKJ,MAHwB,MAApBd,EAAEA,EAAE7F,OAAS,KACb6F,EAAIA,EAAEvF,MAAM,GAAI,IAEb,CAAEsG,gBAAiBf,EAAGgB,cAAed,EAAQe,mBAAoBd,GC1CrE,SAASsB,GAAsBC,EAAYvL,GAC9C,IAIIwL,EAJAC,EAAazL,EAAI,GAAKN,EAAUM,GAAI,GAMxC,OALIyL,IACAzL,GAAKA,GAGWuL,EAAWG,cAE3B,IAAK,oBACDF,EAAS9B,EAAe1J,EAAGuL,EAAWI,yBAA0BJ,EAAWK,0BAC3E,MACJ,IAAK,iBACDJ,EAAST,EAAW/K,EAAGuL,EAAWM,sBAAuBN,EAAWO,uBACpE,MACJ,SACIN,EAAS9B,EAAe1J,EAAG,EAAG,IACnB8K,mBAAqB,IAC5BU,EAAST,EAAW/K,EAAG,EAAG,IAItCA,EAAIwL,EAAOX,cACX,IAAIkB,EAASP,EAAOZ,gBAChBZ,EAAMwB,EAAOV,mBACbkB,EAAaT,EAAWU,qBACxBjC,EAAMgC,IAEND,EADmB3F,EAAO,IAAK4F,EAAahC,GACpB+B,GAK5B,OAHIN,IACAzL,GAAKA,GAEF,CAAE6K,cAAe7K,EAAG4K,gBAAiBmB,GC7BzC,SAASG,GAAgB7D,EAAcrI,EAAGnC,GAC7C,IAAI0K,EAAmB1K,EAAG0K,iBAC1B,GAAU,IAANvI,EACA,MAAO,CAAC,EAAG,GAEXA,EAAI,IACJA,GAAKA,GAET,IAAIsI,EAAYrC,EAAajG,GACzBmL,EAAW/C,EAA4BC,EAAcC,EAAW,CAChEC,iBAAkBA,IAGtBvI,EAAImL,EAAW,EAAInL,EAAIX,KAAKgK,IAAI,IAAK8B,GAAYnL,EAAIX,KAAKgK,IAAI,GAAI8B,GAClE,IAAIgB,EAAqBb,GAAsB/C,EAAiBF,GAAerI,GAC/E,OAAyC,IAArCmM,EAAmBtB,eAGJ5E,EAAakG,EAAmBtB,iBAC9BvC,EAAY6C,EAHtB,CAACA,EAAU7C,GAMf,CACHF,EAA4BC,EAAcC,EAAY,EAAG,CACrDC,iBAAkBA,IAEtBD,EAAY,GChCb,SAAS8D,GAAe3G,EAAG5H,GAC9B,IAAIwO,EAAqBxO,EAAGwO,mBAC5B,OAAO/L,EAAe+L,EAAoB5G,GACpC4G,EAAmB5G,GACnB,ECRH,IAAI6G,GAAe,CAAE,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,geAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,QAAW,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,SAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,SAAY,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,SAAY,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,QAAW,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAM,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,KAAQ,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAA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","file":"static/js/0.4ffeb51d.chunk.js","sourcesContent":["/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n    var tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var uppercasedZones = Object.keys(tzData).reduce(function (all, z) {\n        all[z.toUpperCase()] = z;\n        return all;\n    }, {});\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n        return 'UTC';\n    }\n    return ianaTimeZone;\n}\n","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (isNaN(number) || SameValue(number, -0)) {\n        return 0;\n    }\n    if (isFinite(number)) {\n        return number;\n    }\n    var integer = Math.floor(Math.abs(number));\n    if (number < 0) {\n        integer = -integer;\n    }\n    if (SameValue(integer, -0)) {\n        return 0;\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!isFinite(time)) {\n        return NaN;\n    }\n    if (Math.abs(time) > 8.64 * 1e15) {\n        return NaN;\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n    return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n    if (!IsCallable(C)) {\n        return false;\n    }\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n        return O instanceof BC;\n    }\n    if (typeof O !== 'object') {\n        return false;\n    }\n    var P = C.prototype;\n    if (typeof P !== 'object') {\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n    return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n    return mod(t, MS_PER_SECOND);\n}\n","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\nexport function CoerceOptionsToObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    return ToObject(options);\n}\n","export function DefaultNumberOption(val, min, max, fallback) {\n    if (val !== undefined) {\n        val = Number(val);\n        if (isNaN(val) || val < min || val > max) {\n            throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\n        }\n        return Math.floor(val);\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    // @ts-expect-error\n    return DefaultNumberOption(val, minimum, maximum, fallback);\n}\n","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n    if (typeof opts !== 'object') {\n        throw new TypeError('Options must be an object');\n    }\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = ToString(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\n        }\n        return value;\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n    if (typeof options === 'undefined') {\n        return Object.create(null);\n    }\n    if (typeof options === 'object') {\n        return options;\n    }\n    throw new TypeError('Options must be an object');\n}\n","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n    var tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var zoneNames = new Set();\n    var linkNames = new Set();\n    Object.keys(tzData)\n        .map(function (z) { return z.toUpperCase(); })\n        .forEach(function (z) { return zoneNames.add(z); });\n    Object.keys(uppercaseLinks).forEach(function (linkName) {\n        linkNames.add(linkName.toUpperCase());\n        zoneNames.add(uppercaseLinks[linkName].toUpperCase());\n    });\n    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\n}\n","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    var numerator = units[0], denominator = units[1];\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\n        return false;\n    }\n    return true;\n}\n","/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function getMagnitude(x) {\n    // Cannot count string length via Number.toString because it may use scientific notation\n    // for very small or very large numbers.\n    return Math.floor(Math.log(x) * Math.LOG10E);\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(\"\".concat(pl, \" InternalSlot has not been initialized\"));\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        default: {\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\n","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    if (x === 0) {\n        m = repeat('0', p);\n        e = 0;\n        xFinal = 0;\n    }\n    else {\n        var xToString = x.toString();\n        // If xToString is formatted as scientific notation, the number is either very small or very\n        // large. If the precision of the formatted string is lower that requested max precision, we\n        // should still infer them from the formatted string, otherwise the formatted result might have\n        // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n        var xToStringExponentIndex = xToString.indexOf('e');\n        var _a = xToString.split('e'), xToStringMantissa = _a[0], xToStringExponent = _a[1];\n        var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n        if (xToStringExponentIndex >= 0 &&\n            xToStringMantissaWithoutDecimalPoint.length <= p) {\n            e = +xToStringExponent;\n            m =\n                xToStringMantissaWithoutDecimalPoint +\n                    repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n            xFinal = x;\n        }\n        else {\n            e = getMagnitude(x);\n            var decimalPlaceOffset = e - p + 1;\n            // n is the integer containing the required precision digits. To derive the formatted string,\n            // we will adjust its decimal place in the logic below.\n            var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n            // The rounding caused the change of magnitude, so we should increment `e` by 1.\n            if (adjustDecimalPlace(n, p - 1) >= 10) {\n                e = e + 1;\n                // Divide n by 10 to swallow one precision.\n                n = Math.floor(n / 10);\n            }\n            m = n.toString();\n            // Equivalent of n * 10 ** (e - p + 1)\n            xFinal = adjustDecimalPlace(n, p - 1 - e);\n        }\n    }\n    var int;\n    if (e >= p - 1) {\n        m = m + repeat('0', e - p + 1);\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        m = \"\".concat(m.slice(0, e + 1), \".\").concat(m.slice(e + 1));\n        int = e + 1;\n    }\n    else {\n        m = \"0.\".concat(repeat('0', -e - 1)).concat(m);\n        int = 1;\n    }\n    if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, -1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            m = m.slice(0, -1);\n        }\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n    // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n    function adjustDecimalPlace(x, magnitude) {\n        return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n    }\n}\n","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n = Math.round(x * Math.pow(10, f));\n    var xFinal = n / Math.pow(10, f);\n    // n is a positive integer, but it is possible to be greater than 1e21.\n    // In such case we will go the slow path.\n    // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n    var m;\n    if (n < 1e21) {\n        m = n.toString();\n    }\n    else {\n        m = n.toString();\n        var _a = m.split('e'), mantissa = _a[0], exponent = _a[1];\n        m = mantissa.replace('.', '');\n        m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n    }\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = repeat('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = \"\".concat(a, \".\").concat(b);\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\n","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n    var currencyDigitsData = _a.currencyDigitsData;\n    return HasOwnProperty(currencyDigitsData, c)\n        ? currencyDigitsData[c]\n        : 2;\n}\n","export var digitMapping = { \"adlm\": [\"𞥐\", \"𞥑\", \"𞥒\", \"𞥓\", \"𞥔\", \"𞥕\", \"𞥖\", \"𞥗\", \"𞥘\", \"𞥙\"], \"ahom\": [\"𑜰\", \"𑜱\", \"𑜲\", \"𑜳\", \"𑜴\", \"𑜵\", \"𑜶\", \"𑜷\", \"𑜸\", \"𑜹\"], \"arab\": [\"٠\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"], \"arabext\": [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\"], \"bali\": [\"᭐\", \"᭑\", \"᭒\", \"᭓\", \"᭔\", \"᭕\", \"᭖\", \"᭗\", \"᭘\", \"᭙\"], \"beng\": [\"০\", \"১\", \"২\", \"৩\", \"৪\", \"৫\", \"৬\", \"৭\", \"৮\", \"৯\"], \"bhks\": [\"𑱐\", \"𑱑\", \"𑱒\", \"𑱓\", \"𑱔\", \"𑱕\", \"𑱖\", \"𑱗\", \"𑱘\", \"𑱙\"], \"brah\": [\"𑁦\", \"𑁧\", \"𑁨\", \"𑁩\", \"𑁪\", \"𑁫\", \"𑁬\", \"𑁭\", \"𑁮\", \"𑁯\"], \"cakm\": [\"𑄶\", \"𑄷\", \"𑄸\", \"𑄹\", \"𑄺\", \"𑄻\", \"𑄼\", \"𑄽\", \"𑄾\", \"𑄿\"], \"cham\": [\"꩐\", \"꩑\", \"꩒\", \"꩓\", \"꩔\", \"꩕\", \"꩖\", \"꩗\", \"꩘\", \"꩙\"], \"deva\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\"], \"diak\": [\"𑥐\", \"𑥑\", \"𑥒\", \"𑥓\", \"𑥔\", \"𑥕\", \"𑥖\", \"𑥗\", \"𑥘\", \"𑥙\"], \"fullwide\": [\"０\", \"１\", \"２\", \"３\", \"４\", \"５\", \"６\", \"７\", \"８\", \"９\"], \"gong\": [\"𑶠\", \"𑶡\", \"𑶢\", \"𑶣\", \"𑶤\", \"𑶥\", \"𑶦\", \"𑶧\", \"𑶨\", \"𑶩\"], \"gonm\": [\"𑵐\", \"𑵑\", \"𑵒\", \"𑵓\", \"𑵔\", \"𑵕\", \"𑵖\", \"𑵗\", \"𑵘\", \"𑵙\"], \"gujr\": [\"૦\", \"૧\", \"૨\", \"૩\", \"૪\", \"૫\", \"૬\", \"૭\", \"૮\", \"૯\"], \"guru\": [\"੦\", \"੧\", \"੨\", \"੩\", \"੪\", \"੫\", \"੬\", \"੭\", \"੮\", \"੯\"], \"hanidec\": [\"〇\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"], \"hmng\": [\"𖭐\", \"𖭑\", \"𖭒\", \"𖭓\", \"𖭔\", \"𖭕\", \"𖭖\", \"𖭗\", \"𖭘\", \"𖭙\"], \"hmnp\": [\"𞅀\", \"𞅁\", \"𞅂\", \"𞅃\", \"𞅄\", \"𞅅\", \"𞅆\", \"𞅇\", \"𞅈\", \"𞅉\"], \"java\": [\"꧐\", \"꧑\", \"꧒\", \"꧓\", \"꧔\", \"꧕\", \"꧖\", \"꧗\", \"꧘\", \"꧙\"], \"kali\": [\"꤀\", \"꤁\", \"꤂\", \"꤃\", \"꤄\", \"꤅\", \"꤆\", \"꤇\", \"꤈\", \"꤉\"], \"khmr\": [\"០\", \"១\", \"២\", \"៣\", \"៤\", \"៥\", \"៦\", \"៧\", \"៨\", \"៩\"], \"knda\": [\"೦\", \"೧\", \"೨\", \"೩\", \"೪\", \"೫\", \"೬\", \"೭\", \"೮\", \"೯\"], \"lana\": [\"᪀\", \"᪁\", \"᪂\", \"᪃\", \"᪄\", \"᪅\", \"᪆\", \"᪇\", \"᪈\", \"᪉\"], \"lanatham\": [\"᪐\", \"᪑\", \"᪒\", \"᪓\", \"᪔\", \"᪕\", \"᪖\", \"᪗\", \"᪘\", \"᪙\"], \"laoo\": [\"໐\", \"໑\", \"໒\", \"໓\", \"໔\", \"໕\", \"໖\", \"໗\", \"໘\", \"໙\"], \"lepc\": [\"᪐\", \"᪑\", \"᪒\", \"᪓\", \"᪔\", \"᪕\", \"᪖\", \"᪗\", \"᪘\", \"᪙\"], \"limb\": [\"᥆\", \"᥇\", \"᥈\", \"᥉\", \"᥊\", \"᥋\", \"᥌\", \"᥍\", \"᥎\", \"᥏\"], \"mathbold\": [\"𝟎\", \"𝟏\", \"𝟐\", \"𝟑\", \"𝟒\", \"𝟓\", \"𝟔\", \"𝟕\", \"𝟖\", \"𝟗\"], \"mathdbl\": [\"𝟘\", \"𝟙\", \"𝟚\", \"𝟛\", \"𝟜\", \"𝟝\", \"𝟞\", \"𝟟\", \"𝟠\", \"𝟡\"], \"mathmono\": [\"𝟶\", \"𝟷\", \"𝟸\", \"𝟹\", \"𝟺\", \"𝟻\", \"𝟼\", \"𝟽\", \"𝟾\", \"𝟿\"], \"mathsanb\": [\"𝟬\", \"𝟭\", \"𝟮\", \"𝟯\", \"𝟰\", \"𝟱\", \"𝟲\", \"𝟳\", \"𝟴\", \"𝟵\"], \"mathsans\": [\"𝟢\", \"𝟣\", \"𝟤\", \"𝟥\", \"𝟦\", \"𝟧\", \"𝟨\", \"𝟩\", \"𝟪\", \"𝟫\"], \"mlym\": [\"൦\", \"൧\", \"൨\", \"൩\", \"൪\", \"൫\", \"൬\", \"൭\", \"൮\", \"൯\"], \"modi\": [\"𑙐\", \"𑙑\", \"𑙒\", \"𑙓\", \"𑙔\", \"𑙕\", \"𑙖\", \"𑙗\", \"𑙘\", \"𑙙\"], \"mong\": [\"᠐\", \"᠑\", \"᠒\", \"᠓\", \"᠔\", \"᠕\", \"᠖\", \"᠗\", \"᠘\", \"᠙\"], \"mroo\": [\"𖩠\", \"𖩡\", \"𖩢\", \"𖩣\", \"𖩤\", \"𖩥\", \"𖩦\", \"𖩧\", \"𖩨\", \"𖩩\"], \"mtei\": [\"꯰\", \"꯱\", \"꯲\", \"꯳\", \"꯴\", \"꯵\", \"꯶\", \"꯷\", \"꯸\", \"꯹\"], \"mymr\": [\"၀\", \"၁\", \"၂\", \"၃\", \"၄\", \"၅\", \"၆\", \"၇\", \"၈\", \"၉\"], \"mymrshan\": [\"႐\", \"႑\", \"႒\", \"႓\", \"႔\", \"႕\", \"႖\", \"႗\", \"႘\", \"႙\"], \"mymrtlng\": [\"꧰\", \"꧱\", \"꧲\", \"꧳\", \"꧴\", \"꧵\", \"꧶\", \"꧷\", \"꧸\", \"꧹\"], \"newa\": [\"𑑐\", \"𑑑\", \"𑑒\", \"𑑓\", \"𑑔\", \"𑑕\", \"𑑖\", \"𑑗\", \"𑑘\", \"𑑙\"], \"nkoo\": [\"߀\", \"߁\", \"߂\", \"߃\", \"߄\", \"߅\", \"߆\", \"߇\", \"߈\", \"߉\"], \"olck\": [\"᱐\", \"᱑\", \"᱒\", \"᱓\", \"᱔\", \"᱕\", \"᱖\", \"᱗\", \"᱘\", \"᱙\"], \"orya\": [\"୦\", \"୧\", \"୨\", \"୩\", \"୪\", \"୫\", \"୬\", \"୭\", \"୮\", \"୯\"], \"osma\": [\"𐒠\", \"𐒡\", \"𐒢\", \"𐒣\", \"𐒤\", \"𐒥\", \"𐒦\", \"𐒧\", \"𐒨\", \"𐒩\"], \"rohg\": [\"𐴰\", \"𐴱\", \"𐴲\", \"𐴳\", \"𐴴\", \"𐴵\", \"𐴶\", \"𐴷\", \"𐴸\", \"𐴹\"], \"saur\": [\"꣐\", \"꣑\", \"꣒\", \"꣓\", \"꣔\", \"꣕\", \"꣖\", \"꣗\", \"꣘\", \"꣙\"], \"segment\": [\"🯰\", \"🯱\", \"🯲\", \"🯳\", \"🯴\", \"🯵\", \"🯶\", \"🯷\", \"🯸\", \"🯹\"], \"shrd\": [\"𑇐\", \"𑇑\", \"𑇒\", \"𑇓\", \"𑇔\", \"𑇕\", \"𑇖\", \"𑇗\", \"𑇘\", \"𑇙\"], \"sind\": [\"𑋰\", \"𑋱\", \"𑋲\", \"𑋳\", \"𑋴\", \"𑋵\", \"𑋶\", \"𑋷\", \"𑋸\", \"𑋹\"], \"sinh\": [\"෦\", \"෧\", \"෨\", \"෩\", \"෪\", \"෫\", \"෬\", \"෭\", \"෮\", \"෯\"], \"sora\": [\"𑃰\", \"𑃱\", \"𑃲\", \"𑃳\", \"𑃴\", \"𑃵\", \"𑃶\", \"𑃷\", \"𑃸\", \"𑃹\"], \"sund\": [\"᮰\", \"᮱\", \"᮲\", \"᮳\", \"᮴\", \"᮵\", \"᮶\", \"᮷\", \"᮸\", \"᮹\"], \"takr\": [\"𑛀\", \"𑛁\", \"𑛂\", \"𑛃\", \"𑛄\", \"𑛅\", \"𑛆\", \"𑛇\", \"𑛈\", \"𑛉\"], \"talu\": [\"᧐\", \"᧑\", \"᧒\", \"᧓\", \"᧔\", \"᧕\", \"᧖\", \"᧗\", \"᧘\", \"᧙\"], \"tamldec\": [\"௦\", \"௧\", \"௨\", \"௩\", \"௪\", \"௫\", \"௬\", \"௭\", \"௮\", \"௯\"], \"telu\": [\"౦\", \"౧\", \"౨\", \"౩\", \"౪\", \"౫\", \"౬\", \"౭\", \"౮\", \"౯\"], \"thai\": [\"๐\", \"๑\", \"๒\", \"๓\", \"๔\", \"๕\", \"๖\", \"๗\", \"๘\", \"๙\"], \"tibt\": [\"༠\", \"༡\", \"༢\", \"༣\", \"༤\", \"༥\", \"༦\", \"༧\", \"༨\", \"༩\"], \"tirh\": [\"𑓐\", \"𑓑\", \"𑓒\", \"𑓓\", \"𑓔\", \"𑓕\", \"𑓖\", \"𑓗\", \"𑓘\", \"𑓙\"], \"vaii\": [\"ᘠ\", \"ᘡ\", \"ᘢ\", \"ᘣ\", \"ᘤ\", \"ᘥ\", \"ᘦ\", \"ᘧ\", \"ᘨ\", \"ᘩ\"], \"wara\": [\"𑣠\", \"𑣡\", \"𑣢\", \"𑣣\", \"𑣤\", \"𑣥\", \"𑣦\", \"𑣧\", \"𑣨\", \"𑣩\"], \"wcho\": [\"𞋰\", \"𞋱\", \"𞋲\", \"𞋳\", \"𞋴\", \"𞋵\", \"𞋶\", \"𞋷\", \"𞋸\", \"𞋹\"] };\n","// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n","import { ToRawFixed } from './ToRawFixed';\nimport { digitMapping } from './digit-mapping.generated';\nimport { S_UNICODE_REGEX } from '../regex.generated';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && options.useGrouping, decimalNumberPattern));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n                    var part = unitPatternParts_1[_a];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _b = unit.split('-per-'), numeratorUnit = _b[0], denominatorUnit = _b[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n                var part = _d[_c];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (isNaN(x)) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!isFinite(x)) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n        var groupSepSymbol = symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        result.push({ type: 'decimal', value: symbols.decimal }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        isFinite(x)) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(exponent, 0, 0);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\".concat(zeroPattern);\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n    var _b;\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    var magnitude = 0;\n    var exponent = 0;\n    var n;\n    if (isNaN(x)) {\n        n = symbols.nan;\n    }\n    else if (!isFinite(x)) {\n        n = symbols.infinity;\n    }\n    else {\n        if (internalSlots.style === 'percent') {\n            x *= 100;\n        }\n        ;\n        _b = ComputeExponent(numberFormat, x, {\n            getInternalSlots: getInternalSlots,\n        }), exponent = _b[0], magnitude = _b[1];\n        // Preserve more precision by doing multiplication when exponent is negative.\n        x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\n        n = formatNumberResult.formattedString;\n        x = formatNumberResult.roundedNumber;\n    }\n    // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n    // We need to do this before `x` is rounded.\n    var sign;\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            sign = 0;\n            break;\n        case 'auto':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        case 'always':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        default:\n            // x === 0 -> x is 0 or x is -0\n            if (x === 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else if (x > 0) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n    }\n    return formatToParts({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n    var parts = PartitionNumberPattern(nf, x, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n","import { GetNumberOption } from '../GetNumberOption';\nimport { DefaultNumberOption } from '../DefaultNumberOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    if (mnsd !== undefined || mxsd !== undefined) {\n        internalSlots.roundingType = 'significantDigits';\n        mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n        mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n        internalSlots.minimumSignificantDigits = mnsd;\n        internalSlots.maximumSignificantDigits = mxsd;\n    }\n    else if (mnfd !== undefined || mxfd !== undefined) {\n        internalSlots.roundingType = 'fractionDigits';\n        mnfd = DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n        var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n        mxfd = DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n        internalSlots.minimumFractionDigits = mnfd;\n        internalSlots.maximumFractionDigits = mxfd;\n    }\n    else if (notation === 'compact') {\n        internalSlots.roundingType = 'compactRounding';\n    }\n    else {\n        internalSlots.roundingType = 'fractionDigits';\n        internalSlots.minimumFractionDigits = mnfdDefault;\n        internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '@formatjs/intl-localematcher';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = CoerceOptionsToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[r.dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(nf, options, { getInternalSlots: getInternalSlots });\n    var style = internalSlots.style;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n    }\n    var useGrouping = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n    internalSlots.useGrouping = useGrouping;\n    var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n    internalSlots.signDisplay = signDisplay;\n    return nf;\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n","import { ToObject } from './262';\nimport { GetOption } from './GetOption';\nimport { LookupSupportedLocales } from '@formatjs/intl-localematcher';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = ToObject(options);\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return LookupSupportedLocales(availableLocales, requestedLocales);\n    }\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n}\n","export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n","import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\n","export var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/**\n * https://tc39.es/ecma402/#sec-bestavailablelocale\n * @param availableLocales\n * @param locale\n */\nexport function BestAvailableLocale(availableLocales, locale) {\n    var candidate = locale;\n    while (true) {\n        if (availableLocales.has(candidate)) {\n            return candidate;\n        }\n        var pos = candidate.lastIndexOf('-');\n        if (!~pos) {\n            return undefined;\n        }\n        if (pos >= 2 && candidate[pos - 2] === '-') {\n            pos -= 2;\n        }\n        candidate = candidate.slice(0, pos);\n    }\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\nexport function UnicodeExtensionValue(extension, key) {\n    invariant(key.length === 2, 'key must have 2 elements');\n    var size = extension.length;\n    var searchValue = \"-\".concat(key, \"-\");\n    var pos = extension.indexOf(searchValue);\n    if (pos !== -1) {\n        var start = pos + 4;\n        var end = start;\n        var k = start;\n        var done = false;\n        while (!done) {\n            var e = extension.indexOf('-', k);\n            var len = void 0;\n            if (e === -1) {\n                len = size - k;\n            }\n            else {\n                len = e - k;\n            }\n            if (len === 2) {\n                done = true;\n            }\n            else if (e === -1) {\n                end = size;\n                done = true;\n            }\n            else {\n                end = e;\n                k = e + 1;\n            }\n        }\n        return extension.slice(start, end);\n    }\n    searchValue = \"-\".concat(key);\n    pos = extension.indexOf(searchValue);\n    if (pos !== -1 && pos + 3 === size) {\n        return '';\n    }\n    return undefined;\n}\n","import { LookupMatcher } from './LookupMatcher';\nimport { BestFitMatcher } from './BestFitMatcher';\nimport { invariant } from './utils';\nimport { UnicodeExtensionValue } from './UnicodeExtensionValue';\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n    var matcher = options.localeMatcher;\n    var r;\n    if (matcher === 'lookup') {\n        r = LookupMatcher(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    else {\n        r = BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    var foundLocale = r.locale;\n    var result = { locale: '', dataLocale: foundLocale };\n    var supportedExtension = '-u';\n    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n        var key = relevantExtensionKeys_1[_i];\n        invariant(foundLocale in localeData, \"Missing locale data for \".concat(foundLocale));\n        var foundLocaleData = localeData[foundLocale];\n        invariant(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \".concat(key, \" must be an object\"));\n        var keyLocaleData = foundLocaleData[key];\n        invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n        var value = keyLocaleData[0];\n        invariant(typeof value === 'string' || value === null, \"value must be string or null but got \".concat(typeof value, \" in key \").concat(key));\n        var supportedExtensionAddition = '';\n        if (r.extension) {\n            var requestedValue = UnicodeExtensionValue(r.extension, key);\n            if (requestedValue !== undefined) {\n                if (requestedValue !== '') {\n                    if (~keyLocaleData.indexOf(requestedValue)) {\n                        value = requestedValue;\n                        supportedExtensionAddition = \"-\".concat(key, \"-\").concat(value);\n                    }\n                }\n                else if (~requestedValue.indexOf('true')) {\n                    value = 'true';\n                    supportedExtensionAddition = \"-\".concat(key);\n                }\n            }\n        }\n        if (key in options) {\n            var optionsValue = options[key];\n            invariant(typeof optionsValue === 'string' ||\n                typeof optionsValue === 'undefined' ||\n                optionsValue === null, 'optionsValue must be String, Undefined or Null');\n            if (~keyLocaleData.indexOf(optionsValue)) {\n                if (optionsValue !== value) {\n                    value = optionsValue;\n                    supportedExtensionAddition = '';\n                }\n            }\n        }\n        result[key] = value;\n        supportedExtension += supportedExtensionAddition;\n    }\n    if (supportedExtension.length > 2) {\n        var privateIndex = foundLocale.indexOf('-x-');\n        if (privateIndex === -1) {\n            foundLocale = foundLocale + supportedExtension;\n        }\n        else {\n            var preExtension = foundLocale.slice(0, privateIndex);\n            var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n    }\n    result.locale = foundLocale;\n    return result;\n}\n","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var result = { locale: '' };\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            result.locale = availableLocale;\n            if (locale !== noExtensionLocale) {\n                result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n            }\n            return result;\n        }\n    }\n    result.locale = getDefaultLocale();\n    return result;\n}\n","import { BestAvailableLocale } from './BestAvailableLocale';\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var minimizedAvailableLocaleMap = {};\n    var availableLocaleMap = {};\n    var canonicalizedLocaleMap = {};\n    var minimizedAvailableLocales = new Set();\n    availableLocales.forEach(function (locale) {\n        var minimizedLocale = new Intl.Locale(locale)\n            .minimize()\n            .toString();\n        var canonicalizedLocale = Intl.getCanonicalLocales(locale)[0] || locale;\n        minimizedAvailableLocaleMap[minimizedLocale] = locale;\n        availableLocaleMap[locale] = locale;\n        canonicalizedLocaleMap[canonicalizedLocale] = locale;\n        minimizedAvailableLocales.add(minimizedLocale);\n        minimizedAvailableLocales.add(locale);\n        minimizedAvailableLocales.add(canonicalizedLocale);\n    });\n    var foundLocale;\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var l = requestedLocales_1[_i];\n        if (foundLocale) {\n            break;\n        }\n        var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        if (availableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        if (minimizedAvailableLocales.has(noExtensionLocale)) {\n            foundLocale = noExtensionLocale;\n            break;\n        }\n        var locale = new Intl.Locale(noExtensionLocale);\n        var maximizedRequestedLocale = locale.maximize().toString();\n        var minimizedRequestedLocale = locale.minimize().toString();\n        // Check minimized locale\n        if (minimizedAvailableLocales.has(minimizedRequestedLocale)) {\n            foundLocale = minimizedRequestedLocale;\n            break;\n        }\n        // Lookup algo on maximized locale\n        foundLocale = BestAvailableLocale(minimizedAvailableLocales, maximizedRequestedLocale);\n    }\n    if (!foundLocale) {\n        return { locale: getDefaultLocale() };\n    }\n    return {\n        locale: availableLocaleMap[foundLocale] ||\n            canonicalizedLocaleMap[foundLocale] ||\n            minimizedAvailableLocaleMap[foundLocale] ||\n            foundLocale,\n    };\n}\n","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\n * @param availableLocales\n * @param requestedLocales\n */\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\n    var subset = [];\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            subset.push(availableLocale);\n        }\n    }\n    return subset;\n}\n","import { CanonicalizeLocaleList } from './abstract/CanonicalizeLocaleList';\nimport { ResolveLocale } from './abstract/ResolveLocale';\nexport function match(requestedLocales, availableLocales, defaultLocale, opts) {\n    var locales = availableLocales.reduce(function (all, l) {\n        all.add(l);\n        return all;\n    }, new Set());\n    return ResolveLocale(locales, CanonicalizeLocaleList(requestedLocales), {\n        localeMatcher: (opts === null || opts === void 0 ? void 0 : opts.algorithm) || 'best fit',\n    }, [], {}, function () { return defaultLocale; }).locale;\n}\nexport { LookupSupportedLocales } from './abstract/LookupSupportedLocales';\nexport { ResolveLocale } from './abstract/ResolveLocale';\n","/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n"],"sourceRoot":""}